{
    "flask_app": {
        "BASIC_AUTH_PASSWORD": "demo",
        "BASIC_AUTH_USERNAME": "demo",
        "SECRET_KEY": "MySuperUltraSecret"
    },
    "iqr_service": {
        "plugin_notes": {
            "classification_factory": "Selection of the backend in which classifications are stored. The in-memory version is recommended because normal caching mechanisms will not account for the variety of classifiers that can potentially be created via this utility.",
            "classifier_config": "The configuration to use for training and using classifiers for the /classifier endpoint. When configuring a classifier for use, don't fill out model persistence values as many classifiers may be created and thrown away during this service's operation.",
            "descriptor_factory": "What descriptor element factory to use when asked to compute a descriptor on data.",
            "descriptor_generator": "Descriptor generation algorithm to use when requested to describe data.",
            "descriptor_index": "This is the index from which given positive and negative example descriptors are retrieved from. Not used for nearest neighbor querying. This index must contain all descriptors that could possibly be used as positive/negative examples and updated accordingly.",
            "neighbor_index": "This is the neighbor index to pull initial near-positive descriptors from.",
            "relevancy_index_config": "The relevancy index config provided should not have persistent storage configured as it will be used in such a way that instances are created, built and destroyed often."
        },
        "plugins": {
            "classification_factory": {
                "MemoryClassificationElement": {},
                "type": "MemoryClassificationElement"
            },
            "classifier_config": {
                "LibSvmClassifier": {
                    "normalize": 2,
                    "svm_label_map_uri": null,
                    "svm_model_uri": null,
                    "train_params": {
                        "-b": 1,
                        "-c": 2,
                        "-s": 0,
                        "-t": 0
                    }
                },
                "type": "LibSvmClassifier"
            },
            "descriptor_factory": {
                "PostgresDescriptorElement": {
                    "binary_col": "vector",
                    "create_table": false,
                    "db_host": "/dev/shm",
                    "db_name": "postgres",
                    "db_pass": null,
                    "db_port": 5432,
                    "db_user": "smqtk",
                    "table_name": "descriptors_resnet50_pool5",
                    "type_col": "type_str",
                    "uuid_col": "uid"
                },
                "type": "PostgresDescriptorElement"
            },
            "descriptor_generator": {
                "CaffeDescriptorGenerator": {
                    "batch_size": 10,
                    "data_layer": "data",
                    "gpu_device_id": 0,
                    "image_mean": {
                        "DataFileElement": {
                            "explicit_mimetype": null,
                            "filepath": "/home/smqtk/caffe/msra_resnet/ResNet_mean.binaryproto",
                            "readonly": true
                        },
                        "type": "DataFileElement"
                    },
                    "input_scale": null,
                    "load_truncated_images": true,
                    "network_is_bgr": true,
                    "network_model": {
                        "DataFileElement": {
                            "explicit_mimetype": null,
                            "filepath": "/home/smqtk/caffe/msra_resnet/ResNet-50-model.caffemodel",
                            "readonly": true
                        },
                        "type": "DataFileElement"
                    },
                    "network_prototxt": {
                        "DataFileElement": {
                            "explicit_mimetype": null,
                            "filepath": "/home/smqtk/caffe/msra_resnet/ResNet-50-deploy.prototxt",
                            "readonly": true
                        },
                        "type": "DataFileElement"
                    },
                    "pixel_rescale": null,
                    "return_layer": "pool5",
                    "use_gpu": false
                },
                "type": "CaffeDescriptorGenerator"
            },
            "descriptor_index": {
                "PostgresDescriptorIndex": {
                    "create_table": false,
                    "db_host": "/dev/shm",
                    "db_name": "postgres",
                    "db_pass": null,
                    "db_port": 5432,
                    "db_user": "smqtk",
                    "element_col": "element",
                    "multiquery_batch_size": 1000,
                    "pickle_protocol": -1,
                    "read_only": false,
                    "table_name": "descriptor_index_resnet50_pool5",
                    "uuid_col": "uid"
                },
                "type": "PostgresDescriptorIndex"
            },
            "neighbor_index": {
                "LSHNearestNeighborIndex": {
                    "descriptor_index": {
                        "PostgresDescriptorIndex": {
                            "create_table": false,
                            "db_host": "/dev/shm",
                            "db_name": "postgres",
                            "db_pass": null,
                            "db_port": 5432,
                            "db_user": "smqtk",
                            "element_col": "element",
                            "multiquery_batch_size": 1000,
                            "pickle_protocol": -1,
                            "read_only": false,
                            "table_name": "descriptor_index_resnet50_pool5",
                            "uuid_col": "uid"
                        },
                        "type": "PostgresDescriptorIndex"
                    },
                    "distance_method": "cosine",
                    "hash2uuids_kvstore": {
                        "MemoryKeyValueStore": {
                            "cache_element": {
                                "DataFileElement": {
                                    "explicit_mimetype": null,
                                    "filepath": "models/hash2uuids.memKvStore.pickle",
                                    "readonly": false
                                },
                                "type": "DataFileElement"
                            }
                        },
                        "type": "MemoryKeyValueStore"
                    },
                    "hash_index": {
                        "SkLearnBallTreeHashIndex": {
                            "cache_element": {
                                "DataFileElement": {
                                    "explicit_mimetype": null,
                                    "filepath": "models/balltree_hash_index.npz",
                                    "readonly": false
                                },
                                "type": "DataFileElement"
                            },
                            "leaf_size": 40,
                            "random_seed": 0
                        },
                        "type": "SkLearnBallTreeHashIndex"
                    },
                    "hash_index_comment": "'hash_index' may also be null to default to a linear index built at query time.",
                    "lsh_functor": {
                        "ItqFunctor": {
                            "bit_length": 256,
                            "itq_iterations": 100,
                            "mean_vec_cache": {
                                "DataFileElement": {
                                    "explicit_mimetype": null,
                                    "filepath": "models/itq.model.b256_i100_r0.mean_vec.npy",
                                    "readonly": true
                                },
                                "type": "DataFileElement"
                            },
                            "normalize": null,
                            "random_seed": 0,
                            "rotation_cache": {
                                "DataFileElement": {
                                    "explicit_mimetype": null,
                                    "filepath": "models/itq.model.b256_i100_r0.rotation.npy",
                                    "readonly": true
                                },
                                "type": "DataFileElement"
                            }
                        },
                        "type": "ItqFunctor"
                    },
                    "read_only": false
                },
                "type": "LSHNearestNeighborIndex"
            },
            "relevancy_index_config": {
                "LibSvmHikRelevancyIndex": {
                    "autoneg_select_ratio": 1,
                    "cores": null,
                    "descr_cache_filepath": null,
                    "multiprocess_fetch": false
                },
                "type": "LibSvmHikRelevancyIndex"
            }
        },
        "session_control": {
            "positive_seed_neighbors": 500,
            "session_expiration": {
                "check_interval_seconds": 30,
                "enabled": true,
                "session_timeout": 86400
            }
        }
    },
    "server": {
        "host": "0.0.0.0",
        "port": 5001
    }
}
