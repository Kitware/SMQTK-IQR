# This is a basic workflow to help you get started with Actions

name: Docker

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      # hack to disable docker workflow for now
      #- master
      - dev/fix-docker
  pull_request:
    branches:
      # hack to disable docker workflow for now
      #- master
      - dev/fix-docker
  # hack to disable docker workflow for now
  # Trigger nightly Docker build to check for dependency issues
  #schedule:
  #    - cron: '0 0 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

defaults:
  run:
    shell: bash

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# NOTE: Github actions does not support anchors apparently. Forgive duplication of job
#       steps.
jobs:
  docker:
    runs-on: ubuntu-latest
    # Only run this job if the current repository owner is Kitware (don't want to run on forks)
    if: github.repository_owner == 'Kitware'
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # Cache local python environment artifacts for the current python version
      # and poetry lockfile hash.
      - uses: actions/cache@v2
        id: env-cache
        with:
          # Confirmed that the `.local` directory doesn't exist until the
          # `pip install --user` is invoked below, so we can be confident that
          # only our python stuff is being captured in this cache (intentional).
          path: |
            ~/.cache/pypoetry/virtualenvs/
            ~/.local
          key: python-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}

      - name: Docker pull
        run: |
          docker-compose --env-file docker/.env -f docker/docker-compose.build.yml pull

      - name: Build docker image
        run: |
          docker-compose --env-file docker/.env -f docker/docker-compose.build.yml build

      - name: Push images
        if: github.ref == 'refs/heads/master'
        run: |
          docker login gitlab.kitware.com:4567 -u gl-container-ci -p ${{ secrets.GITLAB_CONTAINER_TOKEN }}
          docker-compose --env-file docker/.env -f docker/docker-compose.build.yml push
